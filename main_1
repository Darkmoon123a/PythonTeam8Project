import pygame as pg
import os, time, random

##가보자고

class Game:
    def __init__(self):
        pg.init() # pygame 초기화
        pg.mixer.init() # 이것도 초기화

        self.prev_mode = -1 # 이전 모드를 저장할 변수

        self.screen = pg.display.set_mode((640, 480))  # 창 크기 설정
        pg.display.set_caption("파이썬 리듬게임 제목 추천좀")  # 창 제목 설정
        self.clock = pg.time.Clock()  # 시간 측정용 시계
        self.start_tick = 0  # 게임 시작 시간

        self.running = True  # 게임 전체가 켜져 있는지
        self.playing = False  # 한 판 게임 중인지
        self.screen_mode = 0  # 화면 상태 (0: 로고, 1: 메인, 2: 선택 등)
        self.screen_value = [0, 0, 0, 0]  # 화면 관련 애니메이션 등에 쓰일 값. 쓸거면 이거 가져가셈. 필요시 수정 가능

        self.language_mode = 0  # 언어 모드 (0: 영어, 1: 한국어 ...)
        self.song_select = 1  # 선택된 노래 번호

    def run(self):
        self.playing = True
        while self.playing:
            self.clock.tick(60) # 60프레임
            self.events() # 이벤트 처리
            self.update() # 상태 갱신
            self.draw() # C가 할거. 화면 그리기가 이거임 ㅇㅇ

        pg.mixer.music.fadeout(600) # 음악 천천히 꺼지기

    def events(self): # 이벤트 함수
        for event in pg.event.get(): # 감지한 모든 이벤트 확인
            if event.type == pg.QUIT: # 나가기
                self.playing = False
                self.running = False
            elif event.type == pg.KEYDOWN:  # 키보드 키가 눌렸을 때
                if event.key == pg.K_ESCAPE: # ESC 키를 누르면 창 닫힘
                    self.playing = False
                elif event.key == pg.K_RETURN: # Enter키로 일단 해둠
                    if self.screen_mode == 1: # 메인에서 곡 선택으로
                        self.screen_mode = 2
                        print("곡 선택 화면으로 이동")
                    elif self.screen_mode == 2: # 곡 선택에서 플레이 시작으로
                        self.screen_mode = 3
                        self.start_tick = pg.time.get_ticks() # 시간 재는거
                        print("플레이 시작")
                    elif self.screen_mode == 4: # 결과에서 메인 메뉴로
                        self.screen_mode = 1
                        print("메인 메뉴로 돌아감")

    def update(self): # 업데이트 함수
        current_tick = pg.time.get_ticks() # 지금 시점 시간 (단위: 밀리초)
        self.elapsed_time = current_tick - self.start_tick # 시작 시점과의 차이

        # 화면 모드에 따른 처리 분기
        if self.screen_mode == 0:
            # 로고 화면 → 3초 지나면 자동으로 메인으로 넘어감
            if self.elapsed_time > 3000: #단위 밀리초라서 이럼
                self.screen_mode = 1
                print("→ 메인 메뉴로 이동")

        elif self.screen_mode == 1:
            # 메인 메뉴에서 할 행동
            pass

        elif self.screen_mode == 2:
            # 곡 선택 화면
            pass

        elif self.screen_mode == 3:
            # 플레이 화면
            if self.elapsed_time > 5000:
                #흐름을 보기 위해 5초 뒤 플레이화면에서 결과 화면으로 옮겨지게 코딩함.
                print("결과 화면으로 전환")
                self.screen_mode = 4

        elif self.screen_mode == 4:
            # 결과 화면
            pass
        # 화면 모드가 변경되었을 때만 실행
        if self.prev_mode != self.screen_mode:
            if self.screen_mode == 3:
                self.start_tick = pg.time.get_ticks()
                print('> 플레이 시작! start_tick 갱신됨')
            self.prev_mode = self.screen_mode # 이전 모드 갱신

    def draw(self):
        pass

if __name__ == '__main__': # 이거 메인 함수
    game = Game()
    game.run()

    print('게임 루프 종료됨') # 종료 콘솔창으로 보려고 만든거
